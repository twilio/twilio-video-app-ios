version: 2

# Yaml Defines
aliases:
  - &secrets
    name: Secrets!!!
    command: |
      # Untar secrets
      openssl aes-256-cbc -K $encrypted_120cc09cf48f_key -iv $encrypted_120cc09cf48f_iv -in secrets.tar.enc -out secrets.tar -d
      tar -xvf secrets.tar

      # Xcode Signing
      ./Scripts/ci/configure-keychain.sh
      mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles || true
      cp secrets/Provisioning\ Profiles/*.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      # Bintray creds
      mkdir -p ~/.m2 || true
      cp secrets/settings.xml ~/.m2/settings.xml

      # TwilioVideoHost Credentials
      mkdir -p TwilioVideo/TwilioVideoHost/Credentials || true
      cp secrets/video-ios-credentials.plist TwilioVideo/TwilioVideoHost/Credentials/video-ios-credentials.plist

      # TwilioVideoUITestsHost Credentials
      mkdir -p TwilioVideo/TwilioVideoUITestsHost/Credentials || true
      cp secrets/video-ios-credentials.plist TwilioVideo/TwilioVideoUITestsHost/Credentials/video-ios-credentials.plist

      # Cocoapods
      sed -i '' "s/COCOAPOD_PASSWORD/${COCOAPOD_PASSWORD}/g" secrets/.netrc
      cp secrets/.netrc ~

  - &log-hw-info
    name: Log HW info
    command: |
      sysctl hw

  - &git-user-config
    name: Git User Config
    command: |
      git config --global user.email "twilio-sdk-build@twilio.com"
      git config --global user.name "twilio-sdk-build"

  - &macos-defaults
    macos:
      xcode: "11.0.0"

  # TODO: Use 11.1.0 once the beta images are available.
  - &macos-beta
    macos:
      xcode: "11.0.0"

  # Reset Ruby
  - &reset-ruby
    name: Reset to system ruby
    command: |
      echo "system" > .ruby-version
      chruby system

  # N-1 stable release.
  # TODO: Use Xcode 10.3.0 once issues with TVIVideoViewTests not producing frames are resolved. (ISDK-2640)
  - &macos-minus
    macos:
      xcode: "10.1.0"

  - &macos-large
    resource_class: large

  # This is not currently being used, but chose to leave it here as reference for future usage.
  - &install-simulators
    name: Install simulators
    command: |
      sudo gem install xcode-install
      xcrun simctl list
      echo "" | xcversion simulators --no-progress --install='iOS 9.3'
      xcrun simctl list

  - &simulator-warming
    name: Warm up simulators
    command: |
      xcrun instruments -w "iPhone 8 Plus (12.1) [" || true

  - &simulator-warming-beta
    name: Warm up simulators
    command: |
      xcrun instruments -w "iPhone 8 Plus (13.0) [" || true
  
  - &install-brew-deps
    name: Install awscli, carthage and maven via Homebrew
    command: Scripts/ci/install-brew-deps.sh
      
  # Homebrew dependencies cache
  - &brew-deps-cache-key
    key: brew-deps-{{ checksum "Scripts/ci/install-brew-deps.sh" }}
  - &restore-cache-brew-deps
    <<: *brew-deps-cache-key
    name: Restoring Homebrew dependencies from the cache
  - &save-cache-brew-deps
    <<: *brew-deps-cache-key
    name: Saving Homebrew dependencies to the cache
    paths:
      # Minimal cache of the dependencies installed via Homebrew.
      # `brew link` will be used to restore the symlinks.
      - /usr/local/Cellar/maven
      - /usr/local/Cellar/awscli
      - /usr/local/Cellar/carthage
      - /usr/local/Cellar/openssl
      - /usr/local/Cellar/python
      - /usr/local/Cellar/readline
      - /usr/local/Cellar/sqlite

  - &install-video-app-deps
    name: Install VideoApp dependencies via Carthage
    command: |
      pushd VideoApp
      Scripts/carthage-dependencies.sh
      popd

  # Carthage dependencies cache for VideoApp
  - &video-app-carthage-deps-cache-key
    key: video-app-carthage-deps-{{ checksum "VideoApp/Cartfile.resolved" }}-{{ checksum "Scripts/ci/install-brew-deps.sh" }}
  - &restore-video-app-carthage-deps-cache
    <<: *video-app-carthage-deps-cache-key
    name: Restoring VideoApp dependencies from the cache
  - &save-video-app-carthage-deps-cache
    <<: *video-app-carthage-deps-cache-key
    name: Saving VideoApp dependencies to the cache
    paths:
      # Cache the checkout & build of our dependencies
      - VideoApp/Carthage

  - &install-rtcroomsdemo-deps
    name: Install RTCRoomsDemo dependencies via Carthage
    command: |
      pushd RTCRoomsDemo-iOS
      Scripts/carthage-dependencies.sh
      popd

  # Carthage dependencies cache for RTCRoomsDemo
  - &rtcroomsdemo-carthage-deps-cache-key
    key: rtcroomsdemo-carthage-deps-{{ checksum "RTCRoomsDemo-iOS/Cartfile.resolved" }}-{{ checksum "Scripts/ci/install-brew-deps.sh" }}
  - &restore-rtcroomsdemo-carthage-deps-cache
    <<: *rtcroomsdemo-carthage-deps-cache-key
    name: Restoring RTCRoomsDemo dependencies from the cache
  - &save-rtcroomsdemo-carthage-deps-cache
    <<: *rtcroomsdemo-carthage-deps-cache-key
    name: Saving RTCRoomsDemo dependencies to the cache
    paths:
      # Cache the checkout & build of our dependencies
      - RTCRoomsDemo-iOS/Carthage

  # Filters
  - &build-filter
    branches:
      ignore:
        # All temporary work should be in a branch starting with WIP/
        - /WIP\/.*/

  - &pr-filter
    branches:
      ignore:
        # All temporary work should be in a branch starting with WIP/
        - /WIP\/.*/
        # This is the collection of our "special" branches that we only build with snapshots
        - master
        - "1.0"
        - "2.0"
        - /feature\/.*/

  - &snapshot-filter
    branches:
      only:
        - master
        - "1.0"
        - "2.0"
        - /feature\/.*/

jobs:
  # Builds the dynamic framework, test host, tests and docs
  build-dynamic-framework-debug:
    <<: *macos-defaults
    <<: *macos-large
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: ./Scripts/env.rb ./Scripts/fetch-framework-dependencies.rb
      - run:
          command: ./Scripts/build.sh
          no_output_timeout: 30m
    environment:
      - CONFIGURATION=Debug
      - BUILD_TYPE=Dynamic

  build-dynamic-framework-release:
    <<: *macos-defaults
    <<: *macos-large
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: ./Scripts/env.rb ./Scripts/fetch-framework-dependencies.rb
      - run:
          command: ./Scripts/build.sh
          no_output_timeout: 30m
    environment:
      - CONFIGURATION=Release
      - BUILD_TYPE=Dynamic

  # Builds the static library, test host, and tests
  build-static-library-debug:
    <<: *macos-defaults
    <<: *macos-large
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: sudo gem install xcodeproj
      - run: *secrets
      - run: ./Scripts/env.rb ./Scripts/fetch-framework-dependencies.rb
      - run:
          command: ./Scripts/build.sh
          no_output_timeout: 30m
    environment:
      - CONFIGURATION=Debug
      - BUILD_TYPE=Static

  build-static-library-release:
    <<: *macos-defaults
    <<: *macos-large
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: sudo gem install xcodeproj
      - run: *secrets
      - run: ./Scripts/env.rb ./Scripts/fetch-framework-dependencies.rb
      - run:
          command: ./Scripts/build.sh
          no_output_timeout: 30m
    environment:
      - CONFIGURATION=Release
      - BUILD_TYPE=Static

  # Debug dynamic framework unit tests on simulators
  unit-test-dynamic-framework-debug:
    <<: *macos-minus
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *simulator-warming
      - run:
          command: ./Scripts/run-tests.sh
          no_output_timeout: 30m
      - run:
          command: ./Scripts/ci/failed-test-aggregation.sh
          when: on_fail
    environment:
      - CONFIGURATION=Debug
      - PLATFORM=iphonesimulator
      - SIMULATORS=test-simulators.txt
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-UnitTests

  # Release dynamic framework unit tests on simulators
  unit-test-dynamic-framework-release:
    <<: *macos-minus
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *simulator-warming
      - run:
          command: ./Scripts/run-tests.sh
          no_output_timeout: 30m
      - run:
          command: ./Scripts/ci/failed-test-aggregation.sh
          when: on_fail
    environment:
      - CONFIGURATION=Release
      - PLATFORM=iphonesimulator
      - SIMULATORS=test-simulators.txt
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-UnitTests

  # Debug dynamic framework unit tests on beta simulators
  unit-test-dynamic-framework-debug-beta:
    <<: *macos-beta
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *simulator-warming-beta
      - run:
          command: ./Scripts/run-tests.sh
          no_output_timeout: 30m
      - run:
          command: ./Scripts/ci/failed-test-aggregation.sh
          when: on_fail
    environment:
      - CONFIGURATION=Debug
      - PLATFORM=iphonesimulator
      - SIMULATORS=test-simulators-beta.txt
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-UnitTests

  # Release dynamic framework unit tests on beta simulators
  unit-test-dynamic-framework-release-beta:
    <<: *macos-beta
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *simulator-warming-beta
      - run:
          command: ./Scripts/run-tests.sh
          no_output_timeout: 30m
      - run:
          command: ./Scripts/ci/failed-test-aggregation.sh
          when: on_fail
    environment:
      - CONFIGURATION=Release
      - PLATFORM=iphonesimulator
      - SIMULATORS=test-simulators-beta.txt
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-UnitTests

  # Debug static library unit tests on simulators
  unit-test-static-library-debug:
    <<: *macos-minus
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *simulator-warming
      - run:
          command: ./Scripts/run-tests.sh
          no_output_timeout: 30m
      - run:
          command: ./Scripts/ci/failed-test-aggregation.sh
          when: on_fail
    environment:
      - CONFIGURATION=Debug
      - PLATFORM=iphonesimulator
      - SIMULATORS=test-simulators.txt
      - BUILD_TYPE=Static
      - TESTS=TwilioVideo-StaticLib-UnitTests

  # Release static library unit tests on simulators
  unit-test-static-library-release:
    <<: *macos-minus
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *simulator-warming
      - run:
          command: ./Scripts/run-tests.sh
          no_output_timeout: 30m
      - run:
          command: ./Scripts/ci/failed-test-aggregation.sh
          when: on_fail
    environment:
      - CONFIGURATION=Release
      - PLATFORM=iphonesimulator
      - SIMULATORS=test-simulators.txt
      - BUILD_TYPE=Static
      - TESTS=TwilioVideo-StaticLib-UnitTests

  # Debug dynamic framework integration tests on simulators
  integration-test-dynamic-framework-debug:
    <<: *macos-minus
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *simulator-warming
      - run:
          command: ./Scripts/run-tests.sh
          no_output_timeout: 30m
      - run:
          command: ./Scripts/ci/failed-test-aggregation.sh
          when: on_fail
    environment:
      - CONFIGURATION=Debug
      - PLATFORM=iphonesimulator
      - SIMULATORS=test-simulators.txt
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-IntegrationTests

  # Release dynamic framework integration tests on simulators
  integration-test-dynamic-framework-release:
    <<: *macos-minus
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *simulator-warming
      - run:
          command: ./Scripts/run-tests.sh
          no_output_timeout: 30m
      - run:
          command: ./Scripts/ci/failed-test-aggregation.sh
          when: on_fail
    environment:
      - CONFIGURATION=Release
      - PLATFORM=iphonesimulator
      - SIMULATORS=test-simulators.txt
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-IntegrationTests

  # Debug dynamic framework integration tests on beta simulators
  integration-test-dynamic-framework-debug-beta:
    <<: *macos-beta
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *simulator-warming-beta
      - run:
          command: ./Scripts/run-tests.sh
          no_output_timeout: 30m
      - run:
          command: ./Scripts/ci/failed-test-aggregation.sh
          when: on_fail
    environment:
      - CONFIGURATION=Debug
      - PLATFORM=iphonesimulator
      - SIMULATORS=test-simulators-beta.txt
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-IntegrationTests

  # Release dynamic framework integration tests on beta simulators
  integration-test-dynamic-framework-release-beta:
    <<: *macos-beta
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *simulator-warming-beta
      - run:
          command: ./Scripts/run-tests.sh
          no_output_timeout: 30m
      - run:
          command: ./Scripts/ci/failed-test-aggregation.sh
          when: on_fail
    environment:
      - CONFIGURATION=Release
      - PLATFORM=iphonesimulator
      - SIMULATORS=test-simulators-beta.txt
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-IntegrationTests

  # Debug dynamic framework ui integration tests on simulators
  ui-integration-test-dynamic-framework-debug:
    <<: *macos-minus
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *simulator-warming
      - run:
          command: ./Scripts/run-tests.sh
          no_output_timeout: 30m
      - run:
          command: ./Scripts/ci/failed-test-aggregation.sh
          when: on_fail
    environment:
      - CONFIGURATION=Debug
      - PLATFORM=iphonesimulator
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-UI-IntegrationTests

  # Release dynamic framework ui integration tests on simulators
  ui-integration-test-dynamic-framework-release:
    <<: *macos-minus
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *simulator-warming
      - run:
          command: ./Scripts/run-tests.sh
          no_output_timeout: 30m
      - run:
          command: ./Scripts/ci/failed-test-aggregation.sh
          when: on_fail
    environment:
      - CONFIGURATION=Release
      - PLATFORM=iphonesimulator
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-UI-IntegrationTests

  # FTL Device testing
  # Debug dynamic framework unit tests on FTL Devices
  ftl-unit-test-dynamic-framework-debug:
    <<: *macos-defaults
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - run: sudo gem install aws-sdk-s3 plist
      - run: *secrets
      - run: ./Scripts/ftl/install_flank.sh
      - run:
          command: ./Scripts/env.rb Scripts/ftl/test.rb
          no_output_timeout: 60m
    environment:
      - CONFIGURATION=Debug
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-UnitTests

  # Release dynamic framework unit tests on FTL Devices
  ftl-unit-test-dynamic-framework-release:
    <<: *macos-defaults
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - run: sudo gem install aws-sdk-s3 plist
      - run: *secrets
      - run: ./Scripts/ftl/install_flank.sh
      - run:
          command: ./Scripts/env.rb Scripts/ftl/test.rb
          no_output_timeout: 60m
    environment:
      - CONFIGURATION=Release
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-UnitTests

  # Debug static library unit tests on FTL Devices
  ftl-unit-test-static-library-debug:
    <<: *macos-defaults
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - run: sudo gem install aws-sdk-s3 plist
      - run: *secrets
      - run: ./Scripts/ftl/install_flank.sh
      - run:
          command: ./Scripts/env.rb Scripts/ftl/test.rb
          no_output_timeout: 60m
    environment:
      - CONFIGURATION=Debug
      - BUILD_TYPE=Static
      - TESTS=TwilioVideo-StaticLib-UnitTests

  # Release static library unit tests on FTL Devices
  ftl-unit-test-static-library-release:
    <<: *macos-defaults
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - run: sudo gem install aws-sdk-s3 plist
      - run: *secrets
      - run: ./Scripts/ftl/install_flank.sh
      - run:
          command: ./Scripts/env.rb Scripts/ftl/test.rb
          no_output_timeout: 60m
    environment:
      - CONFIGURATION=Release
      - BUILD_TYPE=Static
      - TESTS=TwilioVideo-StaticLib-UnitTests

  # Debug dynamic framework integration tests on FTL Devices
  ftl-integration-test-dynamic-framework-debug:
    <<: *macos-defaults
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - run: sudo gem install aws-sdk-s3 plist
      - run: *secrets
      - run: ./Scripts/ftl/install_flank.sh
      - run:
          command: ./Scripts/env.rb Scripts/ftl/test.rb
          no_output_timeout: 60m
    environment:
      - CONFIGURATION=Debug
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-IntegrationTests

  # Release dynamic framework integration tests on FTL Devices
  ftl-integration-test-dynamic-framework-release:
    <<: *macos-defaults
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - run: sudo gem install aws-sdk-s3 plist
      - run: *secrets
      - run: ./Scripts/ftl/install_flank.sh
      - run:
          command: ./Scripts/env.rb Scripts/ftl/test.rb
          no_output_timeout: 60m
    environment:
      - CONFIGURATION=Release
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-IntegrationTests

  # Debug dynamic framework ui integration tests on FTL Devices
  ftl-ui-integration-test-dynamic-framework-debug:
    <<: *macos-defaults
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - run: sudo gem install aws-sdk-s3 plist
      - run: *secrets
      - run: ./Scripts/ftl/install_flank.sh
      - run:
          command: ./Scripts/env.rb Scripts/ftl/test.rb
          no_output_timeout: 60m
    environment:
      - CONFIGURATION=Debug
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-UI-IntegrationTests

  # Release dynamic framework ui integration tests on FTL Devices
  ftl-ui-integration-test-dynamic-framework-release:
    <<: *macos-defaults
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - run: sudo gem install aws-sdk-s3 plist
      - run: *secrets
      - run: ./Scripts/ftl/install_flank.sh
      - run:
          command: ./Scripts/env.rb Scripts/ftl/test.rb
          no_output_timeout: 60m
    environment:
      - CONFIGURATION=Release
      - BUILD_TYPE=Dynamic
      - TESTS=TwilioVideo-UI-IntegrationTests
  # Generate size report
  size-report:
    <<: *macos-defaults
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: sudo gem install plist filesize
      - run: *secrets
      - run:
          command: ./Scripts/build-app-sizer.sh
          no_output_timeout: 30m
    environment:
      - CONFIGURATION=Release

  # Debug build of VideoApp-Internal
  video-app-internal-debug:
    <<: *macos-beta
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - restore-cache: *restore-video-app-carthage-deps-cache
      - run: *install-video-app-deps
      - save-cache: *save-video-app-carthage-deps-cache
      - run: *secrets
      - run:
          command: chruby system
      - run:
          command: ./Scripts/build-app.sh
          no_output_timeout: 30m
    environment:
      - CONFIGURATION=Debug
      - IOS_APP=VideoApp-Internal

  # Release build of VideoApp-Internal
  video-app-internal-release:
    <<: *macos-beta
    <<: *macos-large
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - restore-cache: *restore-video-app-carthage-deps-cache
      - run: *install-video-app-deps
      - save-cache: *save-video-app-carthage-deps-cache
      - run: *secrets
      - run:
          command: chruby system
      - run:
          command: ./Scripts/build-app.sh
          no_output_timeout: 30m
    environment:
      - CONFIGURATION=Release
      - IOS_APP=VideoApp-Internal

  # Debug build of VideoApp-Twilio
  video-app-twilio-debug:
    <<: *macos-beta
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - restore-cache: *restore-video-app-carthage-deps-cache
      - run: *install-video-app-deps
      - save-cache: *save-video-app-carthage-deps-cache
      - run: *secrets
      - run:
          command: chruby system
      - run:
          command: ./Scripts/build-app.sh
          no_output_timeout: 30m
    environment:
      - CONFIGURATION=Debug
      - IOS_APP=VideoApp-Twilio

  # Release build of VideoApp-Twilio
  video-app-twilio-release:
    <<: *macos-beta
    <<: *macos-large
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - restore-cache: *restore-video-app-carthage-deps-cache
      - run: *install-video-app-deps
      - save-cache: *save-video-app-carthage-deps-cache
      - run: *secrets
      - run:
          command: chruby system
      - run:
          command: ./Scripts/build-app.sh
          no_output_timeout: 30m
    environment:
      - CONFIGURATION=Release
      - IOS_APP=VideoApp-Twilio

  # Debug build of RTCRoomsDemo
  rtcroomsdemo-debug:
    <<: *macos-defaults
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - restore-cache: *restore-rtcroomsdemo-carthage-deps-cache
      - run: *install-rtcroomsdemo-deps
      - save-cache: *save-rtcroomsdemo-carthage-deps-cache
      - run: *secrets
      - run:
          command: chruby system
      - run:
          command: ./Scripts/build-app.sh
          no_output_timeout: 30m
    environment:
      - CONFIGURATION=Debug
      - IOS_APP=RTCRoomsDemo

  # Release build of RTCRoomsDemo
  rtcroomsdemo-release:
    <<: *macos-defaults
    <<: *macos-large
    steps:
      - run: *log-hw-info
      - checkout
      - run: *reset-ruby
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - restore-cache: *restore-rtcroomsdemo-carthage-deps-cache
      - run: *install-rtcroomsdemo-deps
      - save-cache: *save-rtcroomsdemo-carthage-deps-cache
      - run: *secrets
      - run:
          command: chruby system
      - run:
          command: ./Scripts/build-app.sh
          no_output_timeout: 30m
    environment:
      - CONFIGURATION=Release
      - IOS_APP=RTCRoomsDemo

  # Cleanup PR artifacts
  pr-cleanup-job:
    <<: *macos-defaults
    steps:
      - run: *log-hw-info
      - checkout
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: ./Scripts/ci/cleanup.sh

  # Snapshot
  snapshot-job:
    # Use older Xcode due to errors building the json gem's native extension using Xcode 11
    <<: *macos-minus
    steps:
      - run: *log-hw-info
      - checkout
      - run: sudo gem install aws-sdk-s3 json plist
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *git-user-config
      - run:
          command: ./Scripts/env.rb Scripts/ci/snapshot.rb
          no_output_timeout: 30m
      - run:
          command: ./Scripts/ci/cleanup.sh
          when: on_success

  # Release candidate job
  release-candidate-job:
    <<: *macos-minus
    steps:
      - run: *log-hw-info
      - checkout
      - run: sudo gem install json git
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *git-user-config
      - run:
          command: ./Scripts/env.rb Scripts/ci/rc.rb
          no_output_timeout: 30m
      - run:
          command: ./Scripts/send-circleci-webhook.sh
          when: on_success
      - run:
          command: ./Scripts/send-circleci-qe-webhook.sh
          when: on_success

  # Release job
  release-job:
    <<: *macos-minus
    steps:
      - run: *log-hw-info
      - checkout
      - run: sudo gem install cocoapods json git github_api
      - restore-cache: *restore-cache-brew-deps
      - run: *install-brew-deps
      - save-cache: *save-cache-brew-deps
      - run: *secrets
      - run: *git-user-config
      - run:
          name: Fetch CocoaPods Specs
          command: curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh | bash -s cf
      - run:
          command: ./Scripts/env.rb Scripts/ci/release.rb
          no_output_timeout: 30m
      - run:
          command: ./Scripts/send-circleci-webhook.sh
          when: on_success

workflows:
  version: 2

  release-candidate:
    jobs:
      - release-candidate-job:
          context: sdks
          filters:
            tags:
              only:
                - /^\d+\.\d+\.\d+-rc\d+$/
                - /^\d+\.\d+\.\d+-preview\d+-rc\d+$/
                - /^\d+\.\d+\.\d+-beta\d+-rc\d+$/
            branches:
              ignore: /.*/

  release:
    jobs:
      - release-job:
          context: sdks
          filters:
            tags:
              only:
                - /^\d+\.\d+\.\d+$/
                - /^\d+\.\d+\.\d+-preview\d+$/
                - /^\d+\.\d+\.\d+-beta\d+$/
            branches:
              ignore: /.*/

  build-test-publish:
    jobs:
      # Build
      - build-dynamic-framework-debug:
          filters: *build-filter
      - build-dynamic-framework-release:
          filters: *build-filter
      - build-static-library-debug:
          filters: *build-filter
      - build-static-library-release:
          filters: *build-filter

      # Test
      - unit-test-dynamic-framework-debug:
          filters: *build-filter
          requires:
            - build-dynamic-framework-debug
      - unit-test-dynamic-framework-release:
          filters: *build-filter
          requires:
            - build-dynamic-framework-release
      # TODO: Investigate test failures related to DisplayLink timers (ISDK-2640)
      #- unit-test-dynamic-framework-debug-beta:
      #    filters: *pr-filter
      #    requires:
      #      - build-dynamic-framework-debug
      - unit-test-dynamic-framework-release-beta:
          filters: *pr-filter
          requires:
            - build-dynamic-framework-release
      - unit-test-static-library-debug:
          filters: *build-filter
          requires:
            - build-static-library-debug
      - unit-test-static-library-release:
          filters: *build-filter
          requires:
            - build-static-library-release
      - integration-test-dynamic-framework-debug:
          filters: *build-filter
          requires:
            - build-dynamic-framework-debug
      - integration-test-dynamic-framework-release:
          filters: *build-filter
          requires:
            - build-dynamic-framework-release
      - integration-test-dynamic-framework-debug-beta:
          filters: *pr-filter
          requires:
            - build-dynamic-framework-debug
      - integration-test-dynamic-framework-release-beta:
          filters: *pr-filter
          requires:
            - build-dynamic-framework-release
      # Enable ui tests on simulator when ready
      # - ui-integration-test-dynamic-framework-debug:
      #     filters: *build-filter
      #     requires:
      #       - build-dynamic-framework-debug
      # - ui-integration-test-dynamic-framework-release:
      #     filters: *build-filter
      #     requires:
      #       - build-dynamic-framework-release
      - ftl-unit-test-dynamic-framework-debug:
          filters: *build-filter
          requires:
            - build-dynamic-framework-debug
      - ftl-unit-test-dynamic-framework-release:
          filters: *build-filter
          requires:
            - build-dynamic-framework-release
      - ftl-unit-test-static-library-debug:
          filters: *build-filter
          requires:
            - build-static-library-debug
      - ftl-unit-test-static-library-release:
          filters: *build-filter
          requires:
            - build-static-library-release
      - ftl-integration-test-dynamic-framework-debug:
          filters: *build-filter
          requires:
            - build-dynamic-framework-debug
      - ftl-integration-test-dynamic-framework-release:
          filters: *build-filter
          requires:
            - build-dynamic-framework-release
      - ftl-ui-integration-test-dynamic-framework-debug:
          filters: *build-filter
          requires:
            - build-dynamic-framework-debug
      - ftl-ui-integration-test-dynamic-framework-release:
          filters: *build-filter
          requires:
            - build-dynamic-framework-release

      # More build, but a little later
      - size-report:
          filters: *build-filter
          requires:
            - build-dynamic-framework-release
      - video-app-internal-debug:
          filters: *build-filter
          requires:
            - build-dynamic-framework-debug
      - video-app-internal-release:
          filters: *build-filter
          requires:
            - build-dynamic-framework-release
      - video-app-twilio-debug:
          filters: *build-filter
          requires:
            - build-dynamic-framework-debug
      - video-app-twilio-release:
          filters: *build-filter
          requires:
            - build-dynamic-framework-release
      - rtcroomsdemo-debug:
          filters: *build-filter
          requires:
            - build-dynamic-framework-debug
      - rtcroomsdemo-release:
          filters: *build-filter
          requires:
            - build-dynamic-framework-release

      # Publish
      - snapshot-job:
          filters: *snapshot-filter
          requires:
            - build-dynamic-framework-debug
            - build-dynamic-framework-release
            - build-static-library-debug
            - build-static-library-release
            - unit-test-dynamic-framework-debug
            - unit-test-dynamic-framework-release
            - unit-test-static-library-debug
            - unit-test-static-library-release
            - integration-test-dynamic-framework-debug
            - integration-test-dynamic-framework-release
            - ftl-unit-test-dynamic-framework-debug
            - ftl-unit-test-dynamic-framework-release
            - ftl-unit-test-static-library-debug
            - ftl-unit-test-static-library-release
            - ftl-integration-test-dynamic-framework-debug
            - ftl-integration-test-dynamic-framework-release
            - ftl-ui-integration-test-dynamic-framework-debug
            - ftl-ui-integration-test-dynamic-framework-release
            - size-report
            - video-app-internal-debug
            - video-app-internal-release
            - video-app-twilio-debug
            - video-app-twilio-release
            - rtcroomsdemo-debug
            - rtcroomsdemo-release

      # PR Cleanup
      - pr-cleanup-job:
          filters: *pr-filter
          requires:
            - build-dynamic-framework-debug
            - build-dynamic-framework-release
            - build-static-library-debug
            - build-static-library-release
            - unit-test-dynamic-framework-debug
            - unit-test-dynamic-framework-release
            # TODO: Investigate test failures related to DisplayLink timers (ISDK-2640)
            # - unit-test-dynamic-framework-debug-beta
            - unit-test-dynamic-framework-release-beta
            - unit-test-static-library-debug
            - unit-test-static-library-release
            - integration-test-dynamic-framework-debug
            - integration-test-dynamic-framework-release
            - integration-test-dynamic-framework-debug-beta
            - integration-test-dynamic-framework-release-beta
            - ftl-unit-test-dynamic-framework-debug
            - ftl-unit-test-dynamic-framework-release
            - ftl-unit-test-static-library-debug
            - ftl-unit-test-static-library-release
            - ftl-integration-test-dynamic-framework-debug
            - ftl-integration-test-dynamic-framework-release
            - ftl-ui-integration-test-dynamic-framework-debug
            - ftl-ui-integration-test-dynamic-framework-release
            - size-report
            - video-app-internal-debug
            - video-app-internal-release
            - video-app-twilio-debug
            - video-app-twilio-release
            - rtcroomsdemo-debug
            - rtcroomsdemo-release
