fastlane_version "2.28.3"

default_platform :ios

platform :ios do
  development_app_identifiers = ["com.twilio.video-app-internal", "com.twilio.video-app-community", "com.twilio.Video-InternalUITests"]
  enterprise_app_identifiers = "com.twilio.video-app-internal"

  lane :test do |options|
    cocoapods
    ensure_git_status_clean

    scan(
      scheme: options[:scheme], 
      testplan: options[:test_plan], 
      device: "iPhone 12",
      skip_slack: true
    )
  end

  lane :beta do
    cocoapods
    ensure_git_status_clean
    build_number = increment_build_number(xcodeproj: "VideoApp/VideoApp.xcodeproj")
    commit_version_bump(message: "Increment build number [skip ci]", xcodeproj: "VideoApp/VideoApp.xcodeproj")
    add_git_tag(tag: "v0.#{build_number}")
    push_to_git_remote

    gym(
      scheme: "Video-Internal",
      export_options: {
        method: "enterprise",
        compileBitcode: false,
        thinning: "<none>",
      }
    ) 

    upload_symbols_to_crashlytics()

    appcenter_upload(
      api_token: ENV["APP_CENTER_API_KEY"],
      owner_name: ENV["APP_CENTER_OWNER_NAME"],
      app_name: "Ahoy-Video-App-Internal",
      destinations: "Testers",
      file: "Video-Internal.ipa"
    )
  end

  lane :ci_match_install do
    setup_circle_ci

    get_app_store_connect_api_key

    match(
      type: "development",
      app_identifier: development_app_identifiers,
      readonly: true,
      verbose: true,
      force_for_new_devices: false
    )

    match(
      type: "enterprise",
      app_identifier: enterprise_app_identifiers,
      readonly: true,
      verbose: true,
      force_for_new_devices: false
    )
  end

  desc "Install existing match certs and profiles without updating/overwriting"
  lane :match_install do
    get_app_store_connect_api_key

    match(
      type: "development",
      app_identifier: development_app_identifiers,
      readonly: true,
      verbose: true,
      force_for_new_devices: false
    )

    match(
      type: "enterprise",
      app_identifier: enterprise_app_identifiers,
      readonly: true,
      verbose: true,
      force_for_new_devices: false
    )
  end

  desc "Update and overwrite match certs and profiles if needed - destructive and may require other devs to match_install"
  lane :match_update do
    match(
      type: "development",
      app_identifier: development_app_identifiers,
      readonly: false,
      verbose: true,
      force_for_new_devices: true
    )

    match(
      type: "enterprise",
      app_identifier: enterprise_app_identifiers,
      readonly: false,
      verbose: true,
      force_for_new_devices: true
    )
  end

  desc "Get local api key - assumes you have downloaded the api key to the project directory"
  private_lane :get_app_store_connect_api_key do
    app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_B64"],
      is_key_content_base64: true,
      in_house: false
    )
  end
end
